server:
  port: 8686
  max-http-header-size: 102400
  compression:
    enabled: true
    min-response-size: 20480  #20K 以上开启gzip
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml

spring:
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${STARCOIN_MYSQL_URL}
    username: ${STARCOIN_MYSQL_USER}
    password: ${STARCOIN_MYSQL_PWD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 不配置默认与maximum-pool-size相同
      minimum-idle: 5 #minimum number of idle connections maintained by HikariCP in a connection pool
      # 连接池最大连接数，默认是10
      maximum-pool-size: 20
      connection-test-query: SELECT 1
      idle-timeout: 500000 #maximum idle time for connection
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      max-lifetime: 1800000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.

  jpa:
    show-sql: true
    properties:
      hibernate:
        hbm2ddl:
          # auto: create # 开发阶段使用
          auto: update
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  flyway:
    baselineOnMigrate: true
    # 如果指定 schema 包含了其他表但没有 flyway schema history 表的话，在执行 flyway migrate 命令之前须先执行 flyway baseline 命令。
    # 设置 spring.flyway.baseline-on-migrate 为 true 后，flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
    baselineVersion: 0.0.0
    cleanDisabled: true # flyway 的 clean 命令会删除指定 schema 下的所有 table，应该禁掉
    enabled: true # 启用或禁用 flyway
    locations: classpath:db/migration # 设定 SQL 脚本的目录，比如取值为 classpath:db/migration,filesystem:/sql-migrations
    outOfOrder: false # 生产环境关闭 outOfOrder
    #spring.flyway.encoding=
    # Encoding of SQL migrations (default: UTF-8)
    #spring.flyway.schemas=
    # 需要 flyway 管控的 schema list，缺省的使用 dbsource.connection 直连上的那个 schema，
    # 可以指定多个schema，但仅会在第一个 schema 下建立 metadata 表，也仅在第一个 schema 应用 migration sql 脚本，
    # 但 flyway clean 命令会依次在这些 schema 下都执行一遍。


starcoin:
  chain-id: ${STARCOIN_CHAIN_ID}
  rpc-url: ${STARCOIN_RPC_URL}
  stc-price-reporter:
    # bixin-task-cron: 1/5 * * * * ?
    # coinex-task-cron: 1/5 * * * * ?
    # gateio-task-cron: 1/10 * * * * ?
    bixin-task-fixed-delay: 10000
    coinex-task-fixed-delay: 10000
    gateio-task-fixed-delay: 10000
    ethereum-http-service-url: https://mainnet.infura.io/v3/72637bfa15a940dcadcec25a6fe0fca1
    oracle-scripts-address: "0x00000000000000000000000000000001"
    sender-address: "0x07fa08a855753f0ff7292fdcbe871216"
    sender-private-key: ${STARCOIN_SENDER_PRIVATE_KEY}
  transaction-confirm-task-service:
    fixed-delay: 10000
    confirm-Transaction-created-before-seconds: 30
  transaction-resend-task-service:
    fixed-delay: 10000
    resend-updated-before-seconds: 180
  price-oracle-type-module-address: "0x07fa08a855753f0ff7292fdcbe871216"


ok:
  http:
    connect-timeout: 10
    max-idle-connections: 60
    read-timeout: 10
    write-timeout: 10
    keep-alive-duration: 600

logging:
  level:
    org:
      starcoin:
        stcpricereporter: INFO
    root: INFO